repos:
    # ==========================================================================
    # Golang Pre-Commit Hooks | https://github.com/tekwizely/pre-commit-golang
    #
    # !! ALL Hooks enabled by default - Comment out hooks you are not using
    #
    # Visit the project home page to learn more about the available Hooks,
    # including useful arguments you might want to pass into them.
    #
    # NOTE: When passing options to hooks, if your options contain a reference
    #       to an existing file, then you will need to use a trailing '--'
    #       argument to separate the hook options from the modified-file list
    #       that Pre-Commit passes into the hook.
    #       For repo-based hooks, '--' is not needed.
    #
    # Consider adding aliases to longer-named hooks for easier CLI usage.
    # ==========================================================================
    - repo: https://github.com/tekwizely/pre-commit-golang
      rev: 03770b120e9a4dddcaf3662059ac0948e97c1825
      hooks:
          #
          # Go Build
          #
          - id: go-build-mod
          # - id: go-build-pkg
          # -   id: go-build-repo-mod
          #   id: go-build-repo-pkg
          #
          # Go Mod Tidy
          #
          - id: go-mod-tidy
          # -   id: go-mod-tidy-repo
          #
          # Go Test
          #
          # -   id: go-test-mod
          # -   id: go-test-pkg
          # -   id: go-test-repo-mod
          # -   id: go-test-repo-pkg
          #
          # StructSlop
          #
          - id: go-structslop-mod
          # -   id: go-structslop-pkg
          # -   id: go-structslop-repo-mod
          # -   id: go-structslop-repo-pkg
          #
          # GolangCI-Lint
          # - Fast Multi-Linter
          # - Can be configured to replace MOST other hooks
          # - Supports repo config file for configuration
          # - https://github.com/golangci/golangci-lint
          #
          # -   id: golangci-lint
          - id: golangci-lint-mod
          # -   id: golangci-lint-pkg
          # -   id: golangci-lint-repo-mod
          # -   id: golangci-lint-repo-pkg
          #
          # Invoking Custom Go Tools
          # - Configured *entirely* through the `args` attribute, ie:
          #   args: [ go, test, ./... ]
          # - Use the `name` attribute to provide better messaging when the hook runs
          # - Use the `alias` attribute to be able invoke your hook via `pre-commit run`
          #
          # -   id: my-cmd
          # -   id: my-cmd-mod
          # -   id: my-cmd-pkg
          # -   id: my-cmd-repo
          # -   id: my-cmd-repo-mod
          # -   id: my-cmd-repo-pkg

    # - repo: local
    #   hooks:
    #     # ==============================================================================
    #     # hello-world
    #     #   * Folder-Based
    #     #   * Targets folder containing staged file
    #     #   * Executes if any .go files modified
    #     # ==============================================================================
    #     - id: hello-world
    #       name: "hello-world"
    #       entry: hooks/hello.sh
    #       types: [go]
    #       exclude: "(^|/)vendor/"
    #       language: "script"
    #       description: "Run 'gosec [$ARGS] ./$(dirname $FILE)' for each staged .go file"
    #       pass_filenames: true
    #       require_serial: true
